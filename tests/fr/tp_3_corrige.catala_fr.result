# T.P. N° 3 – Ordonnancement selon l'âge

## Données en entrée:

* Global: Mois de droit à calculer
* Personne:
  * Rôle : demandeur, conjoint du demandeur, enfant
  * Date de naissance

## Modélisation attendue en sortie

* Global: Montant du MF familial
* Personne:
  * Taux de MFB appliqué
  * Montant du MF individuel

```catala
déclaration énumération Rôle:
  -- Demandeur
  -- Conjoint
  -- Enfant

déclaration énumération RôleAvecRang:
  -- Demandeur
  -- Conjoint
  # L'entier est le rang de l'enfant : 0 pour le plus
  # âgé, etc.
  -- Enfant contenu entier

déclaration structure Personne:
  donnée rôle contenu Rôle
  donnée date_naissance contenu date
  donnée identifiant contenu entier

déclaration champ d'application CalculMontantForfaitairePersonne:
  # Convention : la date en entrée est le premier jours du mois de droit à
  # calculer
  entrée mois_de_droit_à_calculer contenu date
  entrée rôle contenu RôleAvecRang
  entrée foyer_isolé contenu booléen

  interne montant_forfaitaire_base contenu argent
  résultat taux_montant_forfaitaire_base contenu décimal

  résultat montant_forfaitaire contenu argent

déclaration champ d'application CalculMontantForfaitaireGlobal:
  entrée foyer_isolé contenu booléen
  # On suppose que la liste est triée selon l'ordre croissant des dates
  # de naissance des personnes.
  entrée personnes contenu liste de Personne
  # Convention : la date en entrée est le premier jours du mois de droit à
  # calculer
  entrée mois_de_droit_à_calculer contenu date
  résultat rôles_avec_rang contenu liste de RôleAvecRang
  résultat montants_forfaitaires_individuel contenu liste de CalculMontantForfaitairePersonne
  résultat montant_forfaitaire_total contenu argent
```

##  ToDo : Calculer, pour un mois de droit donné, le montant forfaitaire familial RSA

Selon les règles suivantes :

```catala
champ d'application CalculMontantForfaitairePersonne:
  étiquette base_zéro définition taux_montant_forfaitaire_base égal à 0%

  définition montant_forfaitaire égal à
    montant_forfaitaire_base * taux_montant_forfaitaire_base

champ d'application CalculMontantForfaitaireGlobal:
  définition montant_forfaitaire_total égal à
    somme argent de montant_forfaitaire_individuel.montant_forfaitaire
      pour montant_forfaitaire_individuel parmi montants_forfaitaires_individuel
```

MF = 100% x Montant forfaitaire de base (MFB) pour le demandeur

```catala
champ d'application CalculMontantForfaitairePersonne:
  exception base_zéro
  définition taux_montant_forfaitaire_base sous condition
    rôle = RôleAvecRang.Demandeur
  conséquence égal à 100%
```

+ 50% x MFB pour le conjoint

```catala
champ d'application CalculMontantForfaitairePersonne:
  exception base_zéro
  définition taux_montant_forfaitaire_base sous condition
    rôle = RôleAvecRang.Conjoint
  conséquence égal à 50%
```

+ 30% x MFB pour l'enfant le plus âgé

```catala
champ d'application CalculMontantForfaitairePersonne:
  exception base_zéro
  définition taux_montant_forfaitaire_base sous condition
    rôle sous forme RôleAvecRang.Enfant de rang et rang = 0
  conséquence égal à 30%
```

+ 40% x MFB pour chaque enfant supplémentaire dans la limite de 3 enfants, en
  considérant les enfants en ordre décroissant selon l'âge

```catala
champ d'application CalculMontantForfaitairePersonne:
  étiquette enfants exception base_zéro
  définition taux_montant_forfaitaire_base sous condition
    rôle sous forme RôleAvecRang.Enfant de rang et (rang > 0 et rang < 3)
  conséquence égal à 40%
```

Pour un foyer isolé, le 1er enfant se voit attribuer la règle dévolue aux
conjoint (50% x MFB) et les autres suivants suivent la même conséquence : 30%
pour le 2ème enfant et 40% pour le 3ème

```catala
champ d'application CalculMontantForfaitairePersonne:
  exception enfants
  définition taux_montant_forfaitaire_base sous condition
    rôle sous forme RôleAvecRang.Enfant et foyer_isolé
  conséquence égal à
    selon rôle sous forme
    -- RôleAvecRang.Enfant de rang :
      si rang = 0 alors 50%
      sinon si rang = 1 alors 30%
      sinon si rang = 2 alors 40%
      sinon 0%
    # Cas impossible : rôle est toujours Enfant dans cette exception.
    -- n'importe quel : 0%
```

En cas de naissances multiples, tous
les enfants jumeaux suivent la même règle : si les jumeaux sont précédés par 2
autres enfants plus âgés, l'ensemble des jumeaux se voit attribuer le même
pourcentage (la règle ne se limite donc pas à 3 enfants)

```catala
champ d'application CalculMontantForfaitaireGlobal:
  définition rôles_avec_rang égal à
    soit (résultat_rôles_avec_rang, date_naissance_dernier_enfant, rang_dernier_enfant_plus_un, nombre_jumeaux_même_date) égal à
      combinaison de (rôles_avec_rang, date_de_naissance_enfant_précédent, rang_enfant, nombre_jumeaux_même_date)
        initialement ( [], |1900-01-01|, (0), (1) )
        avec (
          selon personne.rôle sous forme
          -- Rôle.Demandeur :
            (
                  rôles_avec_rang
                  ++ [ RôleAvecRang.Demandeur ],
                  date_de_naissance_enfant_précédent,
                  rang_enfant,
                  nombre_jumeaux_même_date
            )
          -- Rôle.Conjoint :
            (
                  rôles_avec_rang
                  ++ [ RôleAvecRang.Conjoint ],
                  date_de_naissance_enfant_précédent,
                  rang_enfant,
                  nombre_jumeaux_même_date
            )
          -- Rôle.Enfant :
            si personne.date_naissance = date_de_naissance_enfant_précédent alors
              (
                    rôles_avec_rang
                    ++ [ RôleAvecRang.Enfant contenu (rang_enfant - nombre_jumeaux_même_date) ],
                    date_de_naissance_enfant_précédent, rang_enfant + 1 ,
                    nombre_jumeaux_même_date + 1
              )
            sinon
              (
                    rôles_avec_rang
                    ++ [ RôleAvecRang.Enfant contenu (rang_enfant) ],
                    personne.date_naissance, (rang_enfant + 1),
                    1
              )
        )
        pour personne parmi personnes
    dans
    résultat_rôles_avec_rang

  définition montants_forfaitaires_individuel égal à
    (
      résultat de CalculMontantForfaitairePersonne avec {
        -- mois_de_droit_à_calculer: mois_de_droit_à_calculer
        -- foyer_isolé: foyer_isolé
        -- rôle: rôle_avec_rang
      }
    )
      pour (personne, rôle_avec_rang) parmi (personnes, rôles_avec_rang)
```

Barème

à compter du Montant forfaitaire de base
------------ --------------------------
01-04-2019   559,74
01-04-2020   564,78
01-04-2021   565,34
01-04-2022   566,42

```catala
champ d'application CalculMontantForfaitairePersonne:
  définition montant_forfaitaire_base sous condition
    mois_de_droit_à_calculer >= |2019-04-01| et mois_de_droit_à_calculer < |2020-04-01|
  conséquence égal à 559,74 €

  définition montant_forfaitaire_base sous condition
    mois_de_droit_à_calculer >= |2020-04-01| et mois_de_droit_à_calculer < |2021-04-01|
  conséquence égal à 564,78 €

  définition montant_forfaitaire_base sous condition
    mois_de_droit_à_calculer >= |2021-04-01| et mois_de_droit_à_calculer < |2022-04-01|
  conséquence égal à 565,34 €

  définition montant_forfaitaire_base sous condition
    mois_de_droit_à_calculer >= |2022-04-01|
  conséquence égal à 566,42 €
```

## Réaliser un whatif permettant de vérifier le bon fonctionnement du moteur

Modéliser des cas avec:

* 1 demandeur seul

```catala
déclaration champ d'application Test1:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test1:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes: [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ]
    }
```

* 1 demandeur 1 conjoint

```catala
déclaration champ d'application Test2:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test2:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Conjoint -- date_naissance: |1981-01-01| } ]
    }
```

* et varier ces 2 cas principaux avec respectivement
* aucun enfant
* 1 seul enfant

```catala
déclaration champ d'application Test3:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test3:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ]
    }

déclaration champ d'application Test4:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test4:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Conjoint -- date_naissance: |1981-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ]
    }
```
* 2 enfants

```catala
déclaration champ d'application Test5:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test5:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2011-01-01| } ]
    }

déclaration champ d'application Test6:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test6:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Conjoint -- date_naissance: |1981-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2011-01-01| } ]
    }
```

* 3 enfants

```catala
déclaration champ d'application Test7:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test7:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2011-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ]
    }

déclaration champ d'application Test8:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test8:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Conjoint -- date_naissance: |1981-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2011-01-01| } ;
          Personne { -- identifiant: 4 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ]
    }
```

* 5 enfants

```catala
déclaration champ d'application Test9:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test9:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2011-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ;
          Personne { -- identifiant: 4 -- rôle: Rôle.Enfant -- date_naissance: |2013-01-01| } ;
          Personne { -- identifiant: 5 -- rôle: Rôle.Enfant -- date_naissance: |2014-01-01| } ]
    }

déclaration champ d'application Test10:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test10:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Conjoint -- date_naissance: |1981-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2011-01-01| } ;
          Personne { -- identifiant: 4 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ;
          Personne { -- identifiant: 5 -- rôle: Rôle.Enfant -- date_naissance: |2013-01-01| } ;
          Personne { -- identifiant: 6 -- rôle: Rôle.Enfant -- date_naissance: |2014-01-01| } ]
    }
```

* 2 enfants jumeaux

```catala
déclaration champ d'application Test11:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test11:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ]
    }

déclaration champ d'application Test12:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test12:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Conjoint -- date_naissance: |1981-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ]
    }
```

* 4 enfants dont 2 jumeaux, les jumeaux étant les plus jeunes

```catala
déclaration champ d'application Test13:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test13:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2011-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ;
          Personne { -- identifiant: 4 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ]
    }

déclaration champ d'application Test14:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test14:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Conjoint -- date_naissance: |1981-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2011-01-01| } ;
          Personne { -- identifiant: 4 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ;
          Personne { -- identifiant: 5 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ]
    }
```
* 4 enfants dont 2 jumeaux, les jumeaux étant les plus âgés

```catala
déclaration champ d'application Test15:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test15:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2011-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ;
          Personne { -- identifiant: 4 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ]
    }

déclaration champ d'application Test16:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test16:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Conjoint -- date_naissance: |1981-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2011-01-01| } ;
          Personne { -- identifiant: 4 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ;
          Personne { -- identifiant: 5 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ]
    }
```

* 4 enfants dont 3 triplés, les jumeaux étant les plus jeunes

```catala
déclaration champ d'application Test17:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test17:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 4 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ]
    }

déclaration champ d'application Test18:
  résultat calcul contenu CalculMontantForfaitaireGlobal

champ d'application Test18:
  définition calcul égal à
    résultat de CalculMontantForfaitaireGlobal avec {
      -- foyer_isolé: faux
      -- mois_de_droit_à_calculer: |2022-12-01|
      -- personnes:
        [ Personne { -- identifiant: 0 -- rôle: Rôle.Demandeur -- date_naissance: |1980-01-01| } ;
          Personne { -- identifiant: 1 -- rôle: Rôle.Conjoint -- date_naissance: |1981-01-01| } ;
          Personne { -- identifiant: 2 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 3 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 4 -- rôle: Rôle.Enfant -- date_naissance: |2010-01-01| } ;
          Personne { -- identifiant: 5 -- rôle: Rôle.Enfant -- date_naissance: |2012-01-01| } ]
    }
```
